import pendulum
import json
import hashlib


def hash_to_float(text: str) -> float:
    hash_object = hashlib.md5(text.encode())
    hash_hex = hash_object.hexdigest()
    hash_int = int(hash_hex[:8], 16)
    return hash_int / 0xFFFFFFFF


_capacities = {
    "SOL-DE-001": 1088,
    "SOL-DE-002": 1490,
    "WND-DE-001": 4000,
    "WND-DE-002": 6600,
    "WND-DE-003": 5600,
}

_forecast_solar = [
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    3.244000041485,
    14.433166567485,
    29.545166397095,
    49.55556640625,
    84.220333353678,
    137.821434020996,
    209.895732625326,
    295.479835001628,
    396.418998209635,
    504.510931396484,
    611.932930501302,
    726.200231933594,
    836.175109863281,
    943.055167643229,
    1041.368485514323,
    1134.806160481771,
    1228.491577148438,
    1300.371405707465,
    1379.643422178006,
    1455.070774712278,
    1534.353344726562,
    1601.636474609375,
    1435.478702799479,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    53.117373114891,
    92.716595344036,
    115.990259706947,
    123.881607678547,
    120.039933859243,
    108.450865117883,
    91.710183754394,
    72.838876333349,
    57.420448158912,
    48.511440615291,
    42.55454086308,
    34.664168841862,
    26.530871315024,
    17.47629120671,
    6.139152490122,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.819538665799,
    11.486962521744,
    27.28693370545,
    45.353590209096,
    68.530108889044,
    94.546144272951,
    120.743046449608,
    162.667074144357,
    230.371050483817,
    312.064672364579,
    403.562793484307,
    508.428906104023,
    628.754507970013,
    764.033236649598,
    891.814477690477,
    988.216117472908,
    1061.9563072668,
    1125.543217456945,
    1185.171699566352,
    1240.187177733808,
    1296.067137901269,
    1365.590100764994,
    1441.860930387944,
    1522.239726714807,
    1599.418256737505,
    1664.303332254386,
    1712.520287943798,
    1760.73724363321,
    1796.032415046756,
    1819.959066602151,
    1831.448379714911,
    1833.78684562587,
    1821.490770282868,
    1809.575970468254,
    1800.646285795008,
    1791.29815158581,
    1773.389665998304,
    1755.481180410798,
    1699.027680634414,
    1626.004969158978,
    1535.890449296308,
    1433.782852964758,
    1320.420878078478,
    1195.203011765402,
    1079.354730780553,
    982.364502716332,
    902.603917141979,
    833.186897529966,
    760.950734714091,
    676.443798208692,
    584.911105096486,
    493.613358158152,
    407.034311542916,
    334.715734280756,
    274.633551703359,
    221.475082178164,
    175.811051276033,
    139.180658450824,
    109.80372569576,
    83.452596318353,
    57.190744745154,
    35.305217983575,
    18.683266783545,
    5.446339523386,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    1.390669165878,
    10.184302792104,
    26.044933284701,
    46.508762016896,
    74.855132671756,
    107.095595386186,
    137.938401643447,
    179.860766791731,
    240.941614009394,
    310.201676615401,
    386.509835748396,
    474.595567654645,
    576.499427234879,
    692.566258618417,
    810.194479845785,
    896.704959969763,
    959.675168033642,
    1017.648820887373,
    1077.376697237324,
    1134.708726046627,
    1200.389655732639,
    1274.820256860856,
    1338.57309110603,
    1397.363353211258,
    1452.401736913932,
    1503.368550511038,
    1548.320725945816,
    1593.183668333541,
    1629.299782214456,
    1657.756838015654,
    1678.882846800728,
    1693.299301728476,
    1697.41386311636,
    1690.983500384384,
    1689.673729675841,
    1688.685498828471,
    1677.468448912035,
    1666.206074220313,
    1608.454606120434,
    1534.651168592659,
    1455.704782662835,
    1381.149425704502,
    1289.730715023325,
    1184.862636118842,
    1086.519026921652,
    1002.860211637723,
    931.131919267493,
    864.003944207399,
    794.324063561214,
    722.470918104647,
    648.782285263477,
    563.389356045365,
    469.085240868774,
    375.875796855169,
    291.818064791784,
    219.190250118615,
    158.324812704161,
    114.799386449668,
    89.020064601559,
    70.270883278698,
    50.794973004279,
    34.054932716378,
    19.693455315883,
    6.167422237911,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
]

_forecast_wind = [
    59.530584630921,
    43.066262658081,
    60.534284129278,
    47.104581818068,
    41.650367081239,
    93.15451782587,
    120.254444246382,
    137.317459246261,
    231.814800250862,
    370.364301083224,
    470.720722943762,
    276.014451022292,
    543.688668686096,
    367.857699665833,
    297.105011730786,
    298.611030147137,
    276.014451022292,
    156.387887775538,
    348.807528893661,
    429.546529226987,
    464.683466600633,
    331.743435306852,
    266.973613364499,
    344.293588776441,
    331.241429168068,
    444.099559872984,
    317.185257282128,
    0.0,
    0.0,
    284.553019921318,
    124.771124687526,
    115.737763805237,
    127.782244981622,
    159.399008069634,
    150.867500569694,
    126.276684834574,
    64.582148374771,
    37.187827751106,
    23.30437205736,
    14.03624803824,
    4.76812401912,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    0.0,
    27.766911387493,
    0.0,
    0.0,
    1.487513110044,
    15.866806507139,
    25.287722870752,
    43.633717894631,
    74.084227357093,
    41.650367081239,
    20.329345837271,
    75.658915131676,
    97.169315819297,
    13.883455693746,
    11.900104880354,
    19.337670430575,
    4.92296005467,
    58.025035383386,
    0.0,
    18.345995023879,
    57.523185634208,
    59.028734881743,
    46.022987905394,
    33.017240929046,
    20.011493952697,
    7.005746976349,
    0.0,
    69.567579614488,
    109.715686709742,
    149.863793804995,
    165.421248657826,
    246.882863013849,
    207.163674789025,
    227.55803790111,
    245.395805733137,
    246.3842031974,
    252.200351734567,
    256.040850993374,
    262.481832614913,
    269.132971671838,
    275.343986267869,
    286.529581223857,
    290.765302261154,
    293.4247123629,
    296.44231032318,
    299.750225321269,
    303.293446962046,
    305.148184283198,
    307.157503103343,
    309.292112722208,
    311.528272554691,
    302.636926660065,
    293.812292797299,
    284.992263214021,
    276.234805551368,
    263.814371086515,
    251.432163333299,
    239.079772183983,
    226.750602193257,
    218.177887046721,
    209.619184221452,
    201.071335074225,
    192.531874885395,
    192.662882582649,
    192.798865070656,
    192.938662398783,
    193.081375584697,
    193.238457147593,
    195.111200488452,
    198.718127253214,
    203.015367520009,
    204.023277435024,
    205.414210984984,
    206.066506763887,
    206.509822611954,
    199.504051915632,
    190.169325260795,
    182.276968825854,
    165.940256188768,
    144.608077172718,
    120.709674247094,
    97.855017037875,
    80.125867199477,
    71.68840325957,
    64.349555712497,
    56.929857847989,
    54.098638886138,
    57.231208383884,
    60.108409509233,
    60.575302267966,
    60.993266541315,
    62.04113149173,
    63.472228776471,
    64.93017022856,
    66.426419751655,
    70.899418172831,
    76.090015619448,
    80.835750832123,
    85.002729715534,
    88.629024811415,
    92.738283776709,
    96.97494353026,
    101.344062418797,
    99.236633865834,
    97.562001816637,
    95.639756121319,
    91.996386163984,
    88.031457634582,
    84.48045727137,
    80.898335650241,
    76.284263886301,
    75.065209936323,
    73.558225326736,
    71.742615683066,
    69.939490631132,
    67.006915976117,
    63.888069160418,
    62.132300571094,
    60.151960317777,
    60.246560728787,
    61.319712422666,
    60.2656704343,
    61.238744350721,
    66.604569073856,
    72.099292160486,
    81.843552776638,
    92.154002259494,
    96.852374191788,
    102.91252414174,
    112.436119361264,
    126.168786774071,
    149.590851685865,
    174.655270545285,
    196.026047162687,
    219.542314826785,
    247.616791898565,
    283.735810587441,
    306.644459353415,
    337.708256990056,
    353.207106492128,
    364.795963252932,
    374.239655395535,
    381.439398381107,
    367.132332356045,
    354.449867099661,
    342.074682283188,
    326.886459917154,
    325.163346746169,
    321.46751024105,
    317.822015882598,
    314.176787964291,
    299.245281862385,
    284.359311390796,
    267.454239443096,
    251.531572979814,
    237.976712990974,
    225.086238721293,
    212.131457128811,
    199.759668542412,
    187.599474196916,
    176.045539268613,
    164.569196847662,
    153.720151132481,
    152.744187837537,
    151.533432630507,
    152.235501820195,
    152.125508334478,
    165.367558152557,
    178.513848192205,
    192.344332713604,
    204.011893510498,
    200.520020682023,
    190.481204385925,
    180.146644701121,
    166.763067082462,
    146.926151892135,
    125.983220555281,
    110.085868106053,
    92.780231593211,
    69.273561676851,
    53.382184163395,
    41.374543867471,
    30.041508783873,
    27.784648688665,
    26.893852709906,
    27.045245446656,
    31.188002534696,
    25.416907452124,
    22.274080527922,
    19.13125360372,
    15.988426679518,
    15.348896208964,
    14.70936573841,
    14.069835267855,
    13.430304797301,
    14.066068906595,
    14.70183301589,
    15.337597125184,
    15.973361234478,
    18.033882871984,
    20.09440450949,
    22.154926146995,
    24.215447784501,
    26.399165682862,
    28.582883581223,
    30.766601479584,
    32.950319377945,
    31.708891044043,
    30.467462710141,
    29.226034376239,
    27.984606042337,
    24.065389748957,
    20.244108556378,
    16.573685926033,
    13.223231754001,
    12.78351630942,
    14.374364311052,
    15.64524385437,
    16.765264835455,
    17.272195183023,
    17.74248361179,
    18.212772040558,
    18.683060469326,
    22.163126388862,
    25.643192308398,
    29.123258227934,
    32.60332414747,
    42.948980500075,
    53.29463685268,
    63.640293205286,
    73.985949557891,
    97.150606727087,
    120.315263896283,
    143.479921065479,
    166.644578234675,
    186.40091664744,
    206.157255060206,
    225.913593472971,
    245.669931885736,
    233.325364274073,
    220.98079666241,
    208.636229050747,
    196.291661439084,
]


def get_forecast(asset_id: str, version: pendulum.DateTime) -> str:
    if version.minute % 15 != 0 or version.second != 0 or version.microsecond != 0:
        raise ValueError("forecast version %s not available!", version.isoformat())

    if asset_id not in [
        "SOL-DE-001",
        "SOL-DE-002",
        "WND-DE-001",
        "WND-DE-002",
        "WND-DE-003",
    ]:
        raise ValueError("Asset ID %s not available!", asset_id)

    starts, ends, versions, values = [], [], [], []
    i = (
        version.in_tz("utc").timestamp()
        - version.in_tz("utc").start_of("day").timestamp()
    ) // (15 * 60)
    _forecast = _forecast_solar if "SOL" in asset_id else _forecast_wind
    _forecast = [(v / max(_forecast)) * _capacities[asset_id] for v in _forecast]
    multiplier = hash_to_float(f"{asset_id}{version.isoformat()}")
    for dt in pendulum.Interval(version, version.add(hours=48)).range("minutes", 15):
        starts.append(dt.timestamp())
        ends.append(dt.add(minutes=15).timestamp())
        versions.append(version.timestamp())
        values.append(_forecast[int(i)] * multiplier)
        i += 1

    base_response = {
        "key": {"asset_id": asset_id, "type_id": "pv-forecast-real"},
        "column_ids": ["start", "end", "version", "power"],
        "units": ["ms", "ms", "ms", "kW"],
        "values": [starts, ends, versions, values],
    }
    return json.dumps(base_response)
